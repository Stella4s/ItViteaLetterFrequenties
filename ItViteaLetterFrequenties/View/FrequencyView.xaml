<UserControl x:Class="ItViteaLetterFrequenties.View.FrequencyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ItViteaLetterFrequenties.View"
             xmlns:vm ="clr-namespace:ItViteaLetterFrequenties.Viewmodel"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="800">
    <UserControl.Resources>
        <vm:VMLetterInfo x:Key="letterinfoVM"/>

        <DataTemplate x:Key="FrequencyCellTemplate">
            <TextBlock Text="{Binding Frequency, StringFormat=P}" 
                       Margin="0,3" HorizontalAlignment="Center">
                <TextBlock.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TextBlock.LayoutTransform>
            </TextBlock>
        </DataTemplate>

        <ControlTemplate x:Key="ToggleButtonMenuTemplate" TargetType="{x:Type ToggleButton}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">

                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="DarkGray"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </UserControl.Resources>

    <Grid Margin="5" Background="WhiteSmoke" DataContext="{Binding Source={StaticResource letterinfoVM}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBox x:Name="BoxTxtInput" Margin="5" Text="{Binding TextInput, Mode=TwoWay}"/>

        <Grid Margin="2" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="File:"  BorderBrush="Gray" BorderThickness="1"/>
                <TextBox x:Name="InfoBox" Text="{Binding InfoBox}" IsReadOnly="True" 
                       BorderBrush="Gray" BorderThickness="1" Background="White" Grid.Column="1" VerticalContentAlignment="Center"/>

            </Grid>
            <!--<Button Content="Options" Grid.Column="4"/>-->
            <ToggleButton Content="Only Letters" Grid.Column="3" 
                          Template="{StaticResource ToggleButtonMenuTemplate}" 
                          Command="{Binding ToggleCharactersCommand}" 
                          IsChecked="{Binding IsChecked1}"/>
        </Grid>


        <Grid x:Name="GridH" Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="FontSize" Value="14"/>
                    <Setter Property="FontWeight" Value="Medium"/>
                </Style>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="IsHitTestVisible" Value="False"/>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="Frequency" Grid.Column="0" Grid.Row="0"/>
            <TextBlock Text="Count"  Grid.Column="0" Grid.Row="1"/>
            <TextBlock Text="Letter" Grid.Column="0" Grid.Row="2"/>
            <DataGrid x:Name="DataGrd1" 
                          Grid.Column="1" Grid.RowSpan="3"
                          ItemsSource="{Binding LLCollectionView}"
                          AutoGeneratedColumns="c_dataGrid_AutoGeneratedColumns"
                          AutoGeneratingColumn="DataGrd1_AutoGeneratingColumn"
                          HeadersVisibility="None" IsReadOnly="True" ColumnWidth="*" SnapsToDevicePixels="True" 
                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                <DataGrid.LayoutTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-90"/>
                    </TransformGroup>
                </DataGrid.LayoutTransform>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="FontSize" Value="14"/>
                    </Style>
                </DataGrid.CellStyle>
            </DataGrid>
        </Grid>

        <StackPanel Grid.Column="1" Margin="5" Grid.RowSpan="2">
            <Button Content="Open File"     Padding="5,2" Command="{Binding OpenFileCommand}" ToolTip="Opens text in textdisplay."/>
            <Button Content="Load File"     Padding="5,2" Command="{Binding LoadFileCommand}" ToolTip="Directly loads file into frequency grid."/>
            <Button Content="Get Frequency" Padding="5,2" Command="{Binding GetListCommand}"/>
            <Button Content="Change Letter" Padding="5,2" Command="{Binding UpdateListItem}"/>
        </StackPanel>

    </Grid>
</UserControl>
